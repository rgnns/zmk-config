/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

&mt { };

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 9>;
            bindings = <&kp ESC>;
        };
        combo_minus {
            timeout-ms = <50>;
            key-positions = <3 6>;
            bindings = <&kp MINUS>;
        };
        combo_under {
            timeout-ms = <50>;
            key-positions = <23 26>;
            bindings = <&kp UNDER>;
        };
        combo_caps {
            timeout-ms = <50>;
            key-positions = <20 29>;
            bindings = <&caps_word>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q      &kp W      &kp E       &kp R          &kp T                   &kp Y  &kp U          &kp I       &kp O      &kp P
                &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F    &kp G                   &kp H  &hm RSHFT J    &hm RCTRL K &hm LALT L &hm LGUI QUOT
                &kp Z      &kp X      &kp C       &kp V          &kp B                   &kp N  &kp M          &kp COMMA   &kp DOT    &kp FSLH
                                                  &lt NAV_L TAB  &kp ENTER     &lt NUM_L SPACE  &lt SYM_L BKSP
            >;
        };

        nav_layer {
            bindings = <
                &trans  &trans  &trans  &trans  &trans                 &trans    &kp LBRC  &kp RBRC  &kp LPAR  &kp RPAR
                &trans  &trans  &trans  &trans  &trans                 &kp LARW  &kp DARW  &kp UARW  &kp RARW  &trans
                &trans  &trans  &trans  &trans  &trans                 &trans    &kp LBKT  &kp RBKT  &kp LT    &kp GT
                                        &trans  &trans                 &kp ESC   &kp DEL
            >;
        };

        num_layer {
            bindings = <
                &kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT          &trans  &trans  &trans  &trans  &trans
                &kp SEMI   &kp N4  &kp N5  &kp N6  &kp EQUAL         &trans  &trans  &trans  &trans  &trans
                &kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH          &trans  &trans  &trans  &trans  &trans
                                           &kp N0  &kp MINUS         &trans  &trans
            >;
        };

        sym_layer {
            bindings = <
                &kp GRAVE  &trans     &kp ASTRK  &kp AMPS  &trans             &trans  &trans  &trans  &trans  &trans
                &kp APOS   &kp CARET  &kp PRCNT  &kp DLLR  &kp EQUAL          &trans  &trans  &trans  &trans  &trans
                &kp TILDE  &kp HASH   &kp AT     &kp EXCL  &kp BSLH           &trans  &trans  &trans  &trans  &trans
                                                 &trans    &kp UNDER          &trans  &trans
            >;
        };
    };
};
